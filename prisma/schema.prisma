generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Course {
  PROFESSOR
  DOCTOR
  PHD
  MASTER
  UNDERGRAD
}

enum ReservationStatus {
  PENDING
  CHECKED_IN
  EXPIRED
  CANCELED
  FINISHED
}

model User {
  id           Int       @id @default(autoincrement())
  studentId    String    @unique
  userId       String    @unique
  passwordHash String
  name         String?
  email        String?   @unique
  course       Course    @default(UNDERGRAD)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  reservations Reservation[]
  checkins     Checkin[]
}

model Seat {
  id         Int           @id @default(autoincrement())
  room       String
  seatNumber Int
  label      String?       // UI용(예: "고정석")
  fixed      Boolean       @default(false)

  reservations Reservation[]

  @@unique([room, seatNumber])
  @@index([room])
}

model Reservation {
  id         Int               @id @default(autoincrement())
  seatId     Int
  userId     Int
  startTime  DateTime
  endTime    DateTime
  endedAt    DateTime?
  status     ReservationStatus @default(PENDING)
  extended   Boolean           @default(false)
  createdAt  DateTime          @default(now())

  seat       Seat     @relation(fields: [seatId], references: [id], onDelete: Cascade)
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  pins       Pin[]
  checkins   Checkin[]

  @@index([seatId, startTime, endTime])
  @@index([userId])
  @@index([status, startTime])
}

model Pin {
  id            Int       @id @default(autoincrement())
  reservationId Int
  pinHash       String
  createdAt     DateTime  @default(now())
  expiresAt     DateTime
  used          Boolean   @default(false)

  reservation   Reservation @relation(fields: [reservationId], references: [id], onDelete: Cascade)

  @@index([reservationId])
  @@index([expiresAt])
}

model Checkin {
  id            Int       @id @default(autoincrement())
  reservationId Int
  userId        Int
  checkinTime   DateTime  @default(now())

  reservation   Reservation @relation(fields: [reservationId], references: [id], onDelete: Cascade)
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
}
